.artboard-demo {
    display: flex;
    flex: none;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}
  .artboard.phone {
    width: 320px;
  }
  .artboard.phone-1 {
      width: 320px;
      height: 568px;
    }
  .artboard.phone-1.horizontal,
      .artboard.phone-1.artboard-horizontal {
        width: 568px;
        height: 320px;
      }
  .artboard.phone-2 {
      width: 375px;
      height: 667px;
    }
  .artboard.phone-2.horizontal,
      .artboard.phone-2.artboard-horizontal {
        width: 667px;
        height: 375px;
      }
  .artboard.phone-3 {
      width: 414px;
      height: 736px;
    }
  .artboard.phone-3.horizontal,
      .artboard.phone-3.artboard-horizontal {
        width: 736px;
        height: 414px;
      }
  .artboard.phone-4 {
      width: 375px;
      height: 812px;
    }
  .artboard.phone-4.horizontal,
      .artboard.phone-4.artboard-horizontal {
        width: 812px;
        height: 375px;
      }
  .artboard.phone-5 {
      width: 414px;
      height: 896px;
    }
  .artboard.phone-5.horizontal,
      .artboard.phone-5.artboard-horizontal {
        width: 896px;
        height: 414px;
      }
  .artboard.phone-6 {
      width: 320px;
      height: 1024px;
    }
  .artboard.phone-6.horizontal,
      .artboard.phone-6.artboard-horizontal {
        width: 1024px;
        height: 320px;
      }
.badge-xs {
    height: 0.75rem;
    font-size: 0.75rem;
    line-height: .75rem;
    padding-left: 0.313rem;
    padding-right: 0.313rem
}
  .badge-sm {
    height: 1rem;
    font-size: 0.75rem;
    line-height: 1rem;
    padding-left: 0.438rem;
    padding-right: 0.438rem
}
  .badge-md {
    height: 1.25rem;
    font-size: 0.875rem;
    line-height: 1.25rem;
    padding-left: 0.563rem;
    padding-right: 0.563rem
}
  .badge-lg {
    height: 1.5rem;
    font-size: 1rem;
    line-height: 1.5rem;
    padding-left: 0.688rem;
    padding-right: 0.688rem
}
.btm-nav-xs {
    height: 2.5rem
}
    .btm-nav-xs > *:where(.active) {
    border-top-width: 1px
}
    .btm-nav-xs .btm-nav-label {
    font-size: 0.75rem;
    line-height: 1rem
}
  .btm-nav-sm {
    height: 3rem
}
  .btm-nav-sm > *:where(.active) {
    border-top-width: 2px
}
  .btm-nav-sm .btm-nav-label {
    font-size: 0.75rem;
    line-height: 1rem
}
  .btm-nav-md {
    height: 4rem
}
  .btm-nav-md > *:where(.active) {
    border-top-width: 2px
}
  .btm-nav-md .btm-nav-label {
    font-size: 0.875rem;
    line-height: 1.25rem
}
  .btm-nav-lg {
    height: 5rem
}
  .btm-nav-lg > *:where(.active) {
    border-top-width: 4px
}
  .btm-nav-lg .btm-nav-label {
    font-size: 1rem;
    line-height: 1.5rem
}
.btn-xs {
    height: 1.5rem;
    min-height: 1.5rem;
    padding-left: 0.5rem;
    padding-right: 0.5rem;
    font-size: 0.75rem
}
  .btn-sm {
    height: 2rem;
    min-height: 2rem;
    padding-left: 0.75rem;
    padding-right: 0.75rem;
    font-size: 0.875rem
}
  .btn-md {
    height: 3rem;
    min-height: 3rem;
    padding-left: 1rem;
    padding-right: 1rem;
    font-size: 0.875rem
}
  .btn-lg {
    height: 4rem;
    min-height: 4rem;
    padding-left: 1.5rem;
    padding-right: 1.5rem;
    font-size: 1.125rem
}
  .btn-wide {
    width: 16rem
}
  .btn-block {
    width: 100%
}
  .btn-square:where(.btn-xs) {
    height: 1.5rem;
    width: 1.5rem;
    padding: 0px
}
  .btn-square:where(.btn-sm) {
    height: 2rem;
    width: 2rem;
    padding: 0px
}
  .btn-square:where(.btn-md) {
    height: 3rem;
    width: 3rem;
    padding: 0px
}
  .btn-square:where(.btn-lg) {
    height: 4rem;
    width: 4rem;
    padding: 0px
}
  .btn-circle:where(.btn-xs) {
    height: 1.5rem;
    width: 1.5rem;
    border-radius: 9999px;
    padding: 0px
}
  .btn-circle:where(.btn-sm) {
    height: 2rem;
    width: 2rem;
    border-radius: 9999px;
    padding: 0px
}
  .btn-circle:where(.btn-md) {
    height: 3rem;
    width: 3rem;
    border-radius: 9999px;
    padding: 0px
}
  .btn-circle:where(.btn-lg) {
    height: 4rem;
    width: 4rem;
    border-radius: 9999px;
    padding: 0px
}
.card-side {
  align-items: stretch;
  flex-direction: row;
}
  .card-side :where(figure:first-child) {
  overflow: hidden;
    border-start-start-radius: inherit;
    border-start-end-radius: unset;
    border-end-start-radius: inherit;
    border-end-end-radius: unset;
}
  .card-side :where(figure:last-child) {
  overflow: hidden;
    border-start-start-radius: unset;
    border-start-end-radius: inherit;
    border-end-start-radius: unset;
    border-end-end-radius: inherit;
}
  .card-side figure > * {
    max-width: unset;
  }
:where(.card-side figure > *) {
  width: 100%;
  height: 100%;
  object-fit: cover;
}
[type="checkbox"].checkbox-xs {
    height: 1rem;
    width: 1rem
}
  [type="checkbox"].checkbox-sm {
    height: 1.25rem;
    width: 1.25rem
}
  [type="checkbox"].checkbox-md {
    height: 1.5rem;
    width: 1.5rem
}
  [type="checkbox"].checkbox-lg {
    height: 2rem;
    width: 2rem
}
.divider-horizontal {
    flex-direction: column
}
  .divider-horizontal:before {
    height: 100%;
    width: 0.125rem
}
  .divider-horizontal:after {
    height: 100%;
    width: 0.125rem
}
.divider-vertical {
    flex-direction: row
}
.divider-vertical:before {
    height: 0.125rem;
    width: 100%
}
.divider-vertical:after {
    height: 0.125rem;
    width: 100%
}
.drawer-open > .drawer-toggle {
        display: none;
}
    .drawer-open > .drawer-toggle ~ .drawer-side {
        pointer-events: auto;
        visibility: visible;
        position: sticky;
        display: block;
        width: auto;
        overscroll-behavior: auto;
}
    .drawer-open > .drawer-toggle ~ .drawer-side > *:not(.drawer-overlay) {
        transform: translateX(0%);
      }
    [dir="rtl"] .drawer-open > .drawer-toggle ~ .drawer-side > *:not(.drawer-overlay) {
          transform: translateX(0%);
        }
    .drawer-open > .drawer-toggle:checked ~ .drawer-side {
        pointer-events: auto;
        visibility: visible;
}
  .drawer-open > .drawer-side {
        overflow-y: auto;
}
/* these two should have the same specificity */
html:has(.drawer-toggle:checked) {
        overflow-y: hidden;
  scrollbar-gutter: stable;
}
html:has(.drawer-open.drawer-open) {
        overflow-y: auto;
  scrollbar-gutter: auto;
}
.file-input-xs {
      height: 1.5rem;
      padding-inline-end: 0.5rem;
      font-size: 0.75rem;
      line-height: 1rem;
      line-height: 1.625
}
    .file-input-xs::file-selector-button {
      margin-right: 0.5rem;
      font-size: 0.75rem
}
  .file-input-sm {
      height: 2rem;
      padding-inline-end: 0.75rem;
      font-size: 0.875rem;
      line-height: 1.25rem;
      line-height: 2
}
  .file-input-sm::file-selector-button {
      margin-right: 0.75rem;
      font-size: 0.875rem
}
  .file-input-md {
      height: 3rem;
      padding-inline-end: 1rem;
      font-size: 0.875rem;
      line-height: 1.25rem;
      line-height: 2
}
  .file-input-md::file-selector-button {
      margin-right: 1rem;
      font-size: 0.875rem
}
  .file-input-lg {
      height: 4rem;
      padding-inline-end: 1.5rem;
      font-size: 1.125rem;
      line-height: 1.75rem;
      line-height: 2
}
  .file-input-lg::file-selector-button {
      margin-right: 1.5rem;
      font-size: 1.125rem
}
.indicator :where(.indicator-item) {
    bottom: auto;
    inset-inline-end: 0px;
    inset-inline-start: auto;
    top: 0px;
    --tw-translate-y: -50%;
    --tw-translate-x: 50%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}
.indicator :where(.indicator-item):where([dir="rtl"], [dir="rtl"] *) {
    --tw-translate-x: -50%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}
  .indicator :where(.indicator-item.indicator-start) {
    inset-inline-end: auto;
    inset-inline-start: 0px;
    --tw-translate-x: -50%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}
  .indicator :where(.indicator-item.indicator-start):where([dir="rtl"], [dir="rtl"] *) {
    --tw-translate-x: 50%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}
  .indicator :where(.indicator-item.indicator-center) {
    inset-inline-end: 50%;
    inset-inline-start: 50%;
    --tw-translate-x: -50%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}
  .indicator :where(.indicator-item.indicator-center):where([dir="rtl"], [dir="rtl"] *) {
    --tw-translate-x: 50%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}
  .indicator :where(.indicator-item.indicator-end) {
    inset-inline-end: 0px;
    inset-inline-start: auto;
    --tw-translate-x: 50%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}
  .indicator :where(.indicator-item.indicator-end):where([dir="rtl"], [dir="rtl"] *) {
    --tw-translate-x: -50%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}
  .indicator :where(.indicator-item.indicator-bottom) {
    bottom: 0px;
    top: auto;
    --tw-translate-y: 50%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}
  .indicator :where(.indicator-item.indicator-middle) {
    bottom: 50%;
    top: 50%;
    --tw-translate-y: -50%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}
  .indicator :where(.indicator-item.indicator-top) {
    bottom: auto;
    top: 0px;
    --tw-translate-y: -50%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}
.input-xs {
    height: 1.5rem;
    padding-left: 0.5rem;
    padding-right: 0.5rem;
    font-size: 0.75rem;
    line-height: 1rem;
    line-height: 1.625
}
  .input-md {
    height: 3rem;
    padding-left: 1rem;
    padding-right: 1rem;
    font-size: 0.875rem;
    line-height: 1.25rem;
    line-height: 2
}
  .input-lg {
    height: 4rem;
    padding-left: 1.5rem;
    padding-right: 1.5rem;
    font-size: 1.125rem;
    line-height: 1.75rem;
    line-height: 2
}
  .input-sm {
    height: 2rem;
    padding-left: 0.75rem;
    padding-right: 0.75rem;
    font-size: 0.875rem;
    line-height: 2rem
}
.join.join-vertical {
    flex-direction: column;
}
  .join.join-vertical .join-item:first-child:not(:last-child),
  .join.join-vertical *:first-child:not(:last-child) .join-item {
    border-end-start-radius: 0;
    border-end-end-radius: 0;
    border-start-start-radius: inherit;
    border-start-end-radius: inherit;
  }
  .join.join-vertical .join-item:last-child:not(:first-child),
  .join.join-vertical *:last-child:not(:first-child) .join-item {
    border-start-start-radius: 0;
    border-start-end-radius: 0;
    border-end-start-radius: inherit;
    border-end-end-radius: inherit;
  }

.join.join-horizontal {
    flex-direction: row;
}

.join.join-horizontal .join-item:first-child:not(:last-child),
  .join.join-horizontal *:first-child:not(:last-child) .join-item {
    border-end-end-radius: 0;
    border-start-end-radius: 0;
    border-end-start-radius: inherit;
    border-start-start-radius: inherit;
  }

.join.join-horizontal .join-item:last-child:not(:first-child),
  .join.join-horizontal *:last-child:not(:first-child) .join-item {
    border-end-start-radius: 0;
    border-start-start-radius: 0;
    border-end-end-radius: inherit;
    border-start-end-radius: inherit;
  }
.kbd-xs {
    padding-left: 0.25rem;
    padding-right: 0.25rem;
    font-size: 0.75rem;
    line-height: 1rem;
    min-height: 1.2em;
    min-width: 1.2em
}
  .kbd-sm {
    padding-left: 0.25rem;
    padding-right: 0.25rem;
    font-size: 0.875rem;
    line-height: 1.25rem;
    min-height: 1.6em;
    min-width: 1.6em
}
  .kbd-md {
    padding-left: 0.5rem;
    padding-right: 0.5rem;
    font-size: 1rem;
    line-height: 1.5rem;
    min-height: 2.2em;
    min-width: 2.2em
}
  .kbd-lg {
    padding-left: 1rem;
    padding-right: 1rem;
    font-size: 1.125rem;
    line-height: 1.75rem;
    min-height: 2.5em;
    min-width: 2.5em
}
.menu-horizontal {
    display: inline-flex;
    flex-direction: row
}
  .menu-horizontal > li:not(.menu-title) > details > ul {
    position: absolute
}
.menu-vertical {
    display: flex;
    flex-direction: column
}
.menu-vertical > li:not(.menu-title) > details > ul {
    position: relative
}
.modal-top {
    place-items: start
}
.modal-middle {
    place-items: center
}
.modal-bottom {
    place-items: end
}
[type="radio"].radio-xs {
    height: 1rem;
    width: 1rem
}
  [type="radio"].radio-sm {
    height: 1.25rem;
    width: 1.25rem
}
  [type="radio"].radio-md {
    height: 1.5rem;
    width: 1.5rem
}
  [type="radio"].radio-lg {
    height: 2rem;
    width: 2rem
}
.range-xs {
      height: 1rem
}
    .range-xs::-webkit-slider-runnable-track {
      height: 0.25rem
}
    .range-xs::-moz-range-track {
      height: 0.25rem
}
    .range-xs::-webkit-slider-thumb {
      height: 1rem;
      width: 1rem;
      --filler-offset: 0.4rem
}
    .range-xs::-moz-range-thumb {
      height: 1rem;
      width: 1rem;
      --filler-offset: 0.4rem
}
  .range-sm {
      height: 1.25rem
}
  .range-sm::-webkit-slider-runnable-track {
      height: 0.25rem
}
  .range-sm::-moz-range-track {
      height: 0.25rem
}
  .range-sm::-webkit-slider-thumb {
      height: 1.25rem;
      width: 1.25rem;
      --filler-offset: 0.5rem
}
  .range-sm::-moz-range-thumb {
      height: 1.25rem;
      width: 1.25rem;
      --filler-offset: 0.5rem
}
  .range-md {
      height: 1.5rem
}
  .range-md::-webkit-slider-runnable-track {
      height: 0.5rem
}
  .range-md::-moz-range-track {
      height: 0.5rem
}
  .range-md::-webkit-slider-thumb {
      height: 1.5rem;
      width: 1.5rem;
      --filler-offset: 0.6rem
}
  .range-md::-moz-range-thumb {
      height: 1.5rem;
      width: 1.5rem;
      --filler-offset: 0.6rem
}
  .range-lg {
      height: 2rem
}
  .range-lg::-webkit-slider-runnable-track {
      height: 1rem
}
  .range-lg::-moz-range-track {
      height: 1rem
}
  .range-lg::-webkit-slider-thumb {
      height: 2rem;
      width: 2rem;
      --filler-offset: 1rem
}
  .range-lg::-moz-range-thumb {
      height: 2rem;
      width: 2rem;
      --filler-offset: 1rem
}
.rating-xs input {
    height: 0.75rem;
    width: 0.75rem
}
.rating-sm input {
    height: 1rem;
    width: 1rem
}
.rating-md input {
    height: 1.5rem;
    width: 1.5rem
}
.rating-lg input {
    height: 2.5rem;
    width: 2.5rem
}
.rating-half.rating-xs input:not(.rating-hidden) {
    width: 0.375rem
}
.rating-half.rating-sm input:not(.rating-hidden) {
    width: 0.5rem
}
.rating-half.rating-md input:not(.rating-hidden) {
    width: 0.75rem
}
.rating-half.rating-lg input:not(.rating-hidden) {
    width: 1.25rem
}
.select-md {
    height: 3rem;
    min-height: 3rem;
    padding-left: 1rem;
    padding-right: 2.5rem;
    font-size: 0.875rem;
    line-height: 1.25rem;
    line-height: 2
}
    [dir="rtl"] .select-md {
    padding-left: 2.5rem;
    padding-right: 1rem
}
  .select-lg {
    height: 4rem;
    min-height: 4rem;
    padding-left: 1.5rem;
    padding-right: 2rem;
    font-size: 1.125rem;
    line-height: 1.75rem;
    line-height: 2
}
  [dir="rtl"] .select-lg {
    padding-left: 2rem;
    padding-right: 1.5rem
}
  .select-sm {
    height: 2rem;
    min-height: 2rem;
    padding-left: 0.75rem;
    padding-right: 2rem;
    font-size: 0.875rem;
    line-height: 2rem
}
  [dir="rtl"] .select-sm {
    padding-left: 2rem;
    padding-right: 0.75rem
}
  .select-xs {
    height: 1.5rem;
    min-height: 1.5rem;
    padding-left: 0.5rem;
    padding-right: 2rem;
    font-size: 0.75rem;
    line-height: 1rem;
    line-height: 1.625
}
  [dir="rtl"] .select-xs {
    padding-left: 2rem;
    padding-right: 0.5rem
}
.stats-horizontal {
    grid-auto-flow: column
}
.stats-vertical {
    grid-auto-flow: row
}
.steps-horizontal {
    grid-auto-columns: 1fr;
    display: inline-grid;
    grid-auto-flow: column;
    overflow: hidden;
    overflow-x: auto;
  }
    .steps-horizontal .step {
    display: grid;
    grid-template-columns: repeat(1, minmax(0, 1fr));
    grid-template-rows: repeat(2, minmax(0, 1fr));
    place-items: center;
    text-align: center;
}
  .steps-vertical {
    grid-auto-rows: 1fr;
    grid-auto-flow: row;
  }
  .steps-vertical .step {
    display: grid;
    grid-template-columns: repeat(2, minmax(0, 1fr));
    grid-template-rows: repeat(1, minmax(0, 1fr));
}
.tabs-md :where(.tab) {
  height: 2rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
  line-height: 2;
  --tab-padding: 1rem
}
.tabs-lg :where(.tab) {
  height: 3rem;
  font-size: 1.125rem;
  line-height: 1.75rem;
  line-height: 2;
  --tab-padding: 1.25rem
}
.tabs-sm :where(.tab) {
  height: 1.5rem;
  font-size: 0.875rem;
  line-height: .75rem;
  --tab-padding: 0.75rem
}
.tabs-xs :where(.tab) {
  height: 1.25rem;
  font-size: 0.75rem;
  line-height: .75rem;
  --tab-padding: 0.5rem
}
.textarea-xs {
    padding-left: 0.5rem;
    padding-right: 0.5rem;
    padding-top: 0.25rem;
    padding-bottom: 0.25rem;
    font-size: 0.75rem;
    line-height: 1rem;
    line-height: 1.625
}
  .textarea-sm {
    padding-left: 0.75rem;
    padding-right: 0.75rem;
    padding-top: 0.25rem;
    padding-bottom: 0.25rem;
    font-size: 0.875rem;
    line-height: 2rem
}
  .textarea-md {
    padding-left: 1rem;
    padding-right: 1rem;
    padding-top: 0.75rem;
    padding-bottom: 0.75rem;
    font-size: 0.875rem;
    line-height: 1.25rem;
    line-height: 2
}
  .textarea-lg {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
    padding-top: 1rem;
    padding-bottom: 1rem;
    font-size: 1.125rem;
    line-height: 1.75rem;
    line-height: 2
}
.timeline-vertical {
  flex-direction: column;
}
.timeline-compact,
.timeline-horizontal.timeline-compact {
  --timeline-row-start: 0;
}
.timeline-compact .timeline-start, .timeline-horizontal.timeline-compact .timeline-start {
  grid-column-start: 1;
  grid-column-end: 4;
  grid-row-start: 3;
  grid-row-end: 4;
  margin: 0.25rem;
  align-self: flex-start;
  justify-self: center;
}
.timeline-compact li:has(.timeline-start) .timeline-end, .timeline-horizontal.timeline-compact li:has(.timeline-start) .timeline-end {
  grid-column-start: none;
  grid-row-start: auto;
}
.timeline-vertical.timeline-compact > li {
    --timeline-col-start: 0;
  }
.timeline-vertical.timeline-compact .timeline-start {
  grid-column-start: 3;
  grid-column-end: 4;
  grid-row-start: 1;
  grid-row-end: 4;
  align-self: center;
  justify-self: start;
}
.timeline-vertical.timeline-compact li:has(.timeline-start) .timeline-end {
  grid-column-start: auto;
  grid-row-start: none;
}
:where(.timeline-vertical > li) {
  --timeline-row-start: minmax(0, 1fr);
  --timeline-row-end: minmax(0, 1fr);
}
.timeline-vertical > li > hr {
  height: 100%;
}
:where(.timeline-vertical > li) {
  justify-items: center;
}
:where(.timeline-vertical > li > hr):first-child {
  grid-column-start: 2;
  grid-row-start: 1;
}
:where(.timeline-vertical > li > hr):last-child {
  grid-column-start: 2;
  grid-column-end: auto;
  grid-row-start: 3;
  grid-row-end: none;
}
.timeline-vertical .timeline-start {
  grid-column-start: 1;
  grid-column-end: 2;
  grid-row-start: 1;
  grid-row-end: 4;
  align-self: center;
  justify-self: end;
}
.timeline-vertical .timeline-end {
  grid-column-start: 3;
  grid-column-end: 4;
  grid-row-start: 1;
  grid-row-end: 4;
  align-self: center;
  justify-self: start;
}
.timeline-vertical:where(.timeline-snap-icon) > li {
  --timeline-col-start: minmax(0, 1fr);
  --timeline-row-start: 0.5rem;
}
/* horizontal */
.timeline-horizontal {
  flex-direction: row;
}
.timeline-horizontal > li > hr {
  width: 100%;
}
:where(.timeline-horizontal > li) {
  align-items: center;
}
:where(.timeline-horizontal > li > hr):first-child {
  grid-column-start: 1;
  grid-row-start: 2;
}
:where(.timeline-horizontal > li > hr):last-child {
  grid-column-start: 3;
  grid-column-end: none;
  grid-row-start: 2;
  grid-row-end: auto;
}
.timeline-horizontal .timeline-start {
  grid-column-start: 1;
  grid-column-end: 4;
  grid-row-start: 1;
  grid-row-end: 2;
  align-self: flex-end;
  justify-self: center;
}
.timeline-horizontal .timeline-end {
  grid-column-start: 1;
  grid-column-end: 4;
  grid-row-start: 3;
  grid-row-end: 4;
  align-self: flex-start;
  justify-self: center;
}
:where(.timeline-snap-icon) > li,
.timeline-horizontal:where(.timeline-snap-icon) > li {
  --timeline-col-start: 0.5rem;
  --timeline-row-start: minmax(0, 1fr);
}
:where(.toast) {
    bottom: 0px;
    inset-inline-end: 0px;
    inset-inline-start: auto;
    top: auto;
    --tw-translate-x: 0px;
    --tw-translate-y: 0px;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}
.toast:where(.toast-start) {
    inset-inline-end: auto;
    inset-inline-start: 0px;
    --tw-translate-x: 0px;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}
.toast:where(.toast-center) {
    inset-inline-end: 50%;
    inset-inline-start: 50%;
    --tw-translate-x: -50%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}
.toast:where(.toast-center):where([dir="rtl"], [dir="rtl"] *) {
    --tw-translate-x: 50%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}
.toast:where(.toast-end) {
    inset-inline-end: 0px;
    inset-inline-start: auto;
    --tw-translate-x: 0px;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}
.toast:where(.toast-bottom) {
    bottom: 0px;
    top: auto;
    --tw-translate-y: 0px;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}
.toast:where(.toast-middle) {
    bottom: auto;
    top: 50%;
    --tw-translate-y: -50%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}
.toast:where(.toast-top) {
    bottom: auto;
    top: 0px;
    --tw-translate-y: 0px;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}
[type="checkbox"].toggle-xs {
    --handleoffset: 0.5rem;
    height: 1rem;
    width: 1.5rem;
  }
  [type="checkbox"].toggle-sm {
    --handleoffset: 0.75rem;
    height: 1.25rem;
    width: 2rem;
  }
  [type="checkbox"].toggle-md {
    --handleoffset: 1.5rem;
    height: 1.5rem;
    width: 3rem;
  }
  [type="checkbox"].toggle-lg {
    --handleoffset: 2rem;
    height: 2rem;
    width: 4rem;
  }
.tooltip {
  position: relative;
  display: inline-block;
  --tooltip-offset: calc(100% + 1px + var(--tooltip-tail, 0px));
}
.tooltip:before {
  position: absolute;
  pointer-events: none;
  z-index: 1;
  content: var(--tw-content);
  --tw-content: attr(data-tip);
}
.tooltip:before, .tooltip-top:before {
    transform: translateX(-50%);
    top: auto;
    left: 50%;
    right: auto;
    bottom: var(--tooltip-offset);
  }
.tooltip-bottom:before {
    transform: translateX(-50%);
    top: var(--tooltip-offset);
    left: 50%;
    right: auto;
    bottom: auto;
  }
.tooltip-left:before {
    transform: translateY(-50%);
    top: 50%;
    left: auto;
    right: var(--tooltip-offset);
    bottom: auto;
  }
.tooltip-right:before {
    transform: translateY(-50%);
    top: 50%;
    left: var(--tooltip-offset);
    right: auto;
    bottom: auto;
  }
