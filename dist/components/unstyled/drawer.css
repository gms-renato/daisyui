.drawer {
  position: relative;
  display: grid;
  grid-auto-columns: max-content auto;
}
  .drawer-content {
  grid-column-start: 2;
  grid-row-start: 1;
  min-width: 0px;
}
  .drawer-side {
  pointer-events: none;
  position: fixed;
  inset-inline-start: 0px;
  top: 0px;
  grid-column-start: 1;
  grid-row-start: 1;
  display: grid;
  width: 100%;
  grid-template-columns: repeat(1, minmax(0, 1fr));
  grid-template-rows: repeat(1, minmax(0, 1fr));
  align-items: flex-start;
  justify-items: start;
  overflow-x: hidden;
  overflow-y: hidden;
  overscroll-behavior: contain;
    height: 100vh;
    height: 100dvh;
}
  .drawer-side > .drawer-overlay {
  position: sticky;
  top: 0px;
  place-self: stretch;
}
  .drawer-side > * {
  grid-column-start: 1;
  grid-row-start: 1;
}
  .drawer-side > *:not(.drawer-overlay) {
  transition-property: transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 300ms;
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  will-change: transform;
      transform: translateX(-100%);
}
  [dir="rtl"] .drawer-side > *:not(.drawer-overlay) {
        transform: translateX(100%);
      }
  .drawer-toggle {
  position: fixed;
  height: 0px;
  width: 0px;
  appearance: none;
  opacity: 0;
}
  .drawer-toggle:checked ~ .drawer-side {
  pointer-events: auto;
  visibility: visible;
  overflow-y: auto;
}
  .drawer-toggle:checked ~ .drawer-side > *:not(.drawer-overlay) {
          transform: translateX(0%);
        }
  .drawer-end {
    grid-auto-columns: auto max-content;
  }
  .drawer-end .drawer-toggle ~ .drawer-content {
  grid-column-start: 1;
}
  .drawer-end .drawer-toggle ~ .drawer-side {
  grid-column-start: 2;
  justify-items: end;
}
  .drawer-end .drawer-toggle ~ .drawer-side > *:not(.drawer-overlay) {
        transform: translateX(100%);
      }
  [dir="rtl"] .drawer-end .drawer-toggle ~ .drawer-side > *:not(.drawer-overlay) {
          transform: translateX(-100%);
        }
  .drawer-end .drawer-toggle:checked ~ .drawer-side > *:not(.drawer-overlay) {
        transform: translateX(0%);
      }
