.input {
    border-radius: var(--rounded-btn, 0.5rem);
    border-width: 1px;
    border-color: transparent;
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity)));
    font-size: 1rem;
    line-height: 1.5rem;
}
  .input input {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity)));
    background-color: transparent;
}
  .input input:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
}
  .input[list]::-webkit-calendar-picker-indicator {
    line-height: 1em;
  }
  .input-bordered {
    border-color: var(--fallback-bc,oklch(var(--bc)/0.2));
}
  .input:focus,
  .input:focus-within {
    box-shadow: none;
    border-color: var(--fallback-bc,oklch(var(--bc)/0.2));
    outline-style: solid;
    outline-width: 2px;
    outline-offset: 2px;
    outline-color: var(--fallback-bc,oklch(var(--bc)/0.2));
  }
  .input-ghost {
    --tw-bg-opacity: 0.05;
}
  .input-ghost:focus,
    .input-ghost:focus-within {
    --tw-bg-opacity: 1;
    --tw-text-opacity: 1;
    color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));
      box-shadow: none;
}
  .input-primary {
    --tw-border-opacity: 1;
    border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity)));
}
  .input-primary:focus,
    .input-primary:focus-within {
    --tw-border-opacity: 1;
    border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity)));
    outline-color: var(--fallback-p,oklch(var(--p)/1));
}
  .input-secondary {
    --tw-border-opacity: 1;
    border-color: var(--fallback-s,oklch(var(--s)/var(--tw-border-opacity)));
}
  .input-secondary:focus,
    .input-secondary:focus-within {
    --tw-border-opacity: 1;
    border-color: var(--fallback-s,oklch(var(--s)/var(--tw-border-opacity)));
    outline-color: var(--fallback-s,oklch(var(--s)/1));
}
  .input-accent {
    --tw-border-opacity: 1;
    border-color: var(--fallback-a,oklch(var(--a)/var(--tw-border-opacity)));
}
  .input-accent:focus,
    .input-accent:focus-within {
    --tw-border-opacity: 1;
    border-color: var(--fallback-a,oklch(var(--a)/var(--tw-border-opacity)));
    outline-color: var(--fallback-a,oklch(var(--a)/1));
}
  .input-info {
    --tw-border-opacity: 1;
    border-color: var(--fallback-in,oklch(var(--in)/var(--tw-border-opacity)));
}
  .input-info:focus,
    .input-info:focus-within {
    --tw-border-opacity: 1;
    border-color: var(--fallback-in,oklch(var(--in)/var(--tw-border-opacity)));
    outline-color: var(--fallback-in,oklch(var(--in)/1));
}
  .input-success {
    --tw-border-opacity: 1;
    border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity)));
}
  .input-success:focus,
    .input-success:focus-within {
    --tw-border-opacity: 1;
    border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity)));
    outline-color: var(--fallback-su,oklch(var(--su)/1));
}
  .input-warning {
    --tw-border-opacity: 1;
    border-color: var(--fallback-wa,oklch(var(--wa)/var(--tw-border-opacity)));
}
  .input-warning:focus,
    .input-warning:focus-within {
    --tw-border-opacity: 1;
    border-color: var(--fallback-wa,oklch(var(--wa)/var(--tw-border-opacity)));
    outline-color: var(--fallback-wa,oklch(var(--wa)/1));
}
  .input-error {
    --tw-border-opacity: 1;
    border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity)));
}
  .input-error:focus,
    .input-error:focus-within {
    --tw-border-opacity: 1;
    border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity)));
    outline-color: var(--fallback-er,oklch(var(--er)/1));
}
  .input:has(> input[disabled]),
  .input-disabled,
  .input:disabled,
  .input[disabled] {
    cursor: not-allowed;
    --tw-border-opacity: 1;
    border-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-border-opacity)));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity)));
    color: var(--fallback-bc,oklch(var(--bc)/0.4));
}
  .input:has(> input[disabled])::placeholder,
  .input-disabled::placeholder,
  .input:disabled::placeholder,
  .input[disabled]::placeholder {
    color: var(--fallback-bc,oklch(var(--bc)/var(--tw-placeholder-opacity)));
    --tw-placeholder-opacity: 0.2;
}
  .input:has(> input[disabled]) > input[disabled] {
    cursor: not-allowed;
}
  /* &::-webkit-calendar-picker-indicator {
    display: none;
  } */
  .input::-webkit-date-and-time-value {
    text-align: inherit;
  }
