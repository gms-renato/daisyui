.artboard-demo {
    border-radius:
      var(--rounded-box, 1rem);
    --tw-bg-opacity:
      1;
    background-color:
      var(--fallback-b3,oklch(var(--b3)/var(--tw-bg-opacity)));
    --tw-text-opacity:
      1;
    color:
      var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));
    box-shadow:
      0 1px 3px 0 rgba(0, 0, 0, 0.1),
      0 1px 2px 0 rgba(0, 0, 0, 0.06)
}
.avatar.online:before {
      content: "";
      position: absolute;
      z-index: 10;
      display: block;
      border-radius: 9999px;
      --tw-bg-opacity: 1;
      background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity)));
      outline-style: solid;
      outline-width: 2px;
      outline-color: var(--fallback-b1,oklch(var(--b1)/1));
      width: 15%;
      height: 15%;
      top: 7%;
      right: 7%;
    }
  .avatar.offline:before {
      content: "";
      position: absolute;
      z-index: 10;
      display: block;
      border-radius: 9999px;
      --tw-bg-opacity: 1;
      background-color: var(--fallback-b3,oklch(var(--b3)/var(--tw-bg-opacity)));
      outline-style: solid;
      outline-width: 2px;
      outline-color: var(--fallback-b1,oklch(var(--b1)/1));
      width: 15%;
      height: 15%;
      top: 7%;
      right: 7%;
    }
.card-compact .card-body {
    padding: 1rem;
    font-size: 0.875rem;
    line-height: 1.25rem;
}
  .card-compact .card-title {
    margin-bottom: 0.25rem;
}
.card-normal .card-body {
    padding: var(--padding-card, 2rem);
    font-size: 1rem;
    line-height: 1.5rem;
  }
.card-normal .card-title {
    margin-bottom: 0.75rem;
}
.divider-horizontal {
    margin-left: 1rem;
    margin-right: 1rem;
    margin-top: 0px;
    margin-bottom: 0px;
    height: auto;
    width: 1rem
}
.divider-vertical {
    margin-left: 0px;
    margin-right: 0px;
    margin-top: 1rem;
    margin-bottom: 1rem;
    height: 1rem;
    width: auto
}
.drawer-open > .drawer-toggle ~ .drawer-side > .drawer-overlay {
    cursor: default;
    background-color: transparent
}
.join.join-vertical > :where(*:not(:first-child)) {
    margin-left: 0px;
    margin-right: 0px;
    margin-top: -1px
}
  .join.join-vertical > :where(*:not(:first-child)):is(.btn) {
    margin-top: calc(var(--border-btn) * -1)
}
.join.join-horizontal > :where(*:not(:first-child)) {
    margin-top: 0px;
    margin-bottom: 0px;
    margin-inline-start: -1px
}
.join.join-horizontal > :where(*:not(:first-child)):is(.btn) {
    margin-inline-start: calc(var(--border-btn) * -1)
}
.menu-horizontal > li:not(.menu-title) > details > ul {
      margin-inline-start: 0px;
      margin-top: 1rem;
      padding-top: 0.5rem;
      padding-bottom: 0.5rem;
      padding-inline-end: 0.5rem;
}
  .menu-horizontal > li > details > ul:before {
      content: none;
    }
:where(.menu-horizontal > li:not(.menu-title) > details > ul) {
      border-radius: var(--rounded-box, 1rem);
      --tw-bg-opacity: 1;
      background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity)));
      --tw-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
      --tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color), 0 8px 10px -6px var(--tw-shadow-color);
      box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.menu-vertical > li:not(.menu-title) > details > ul {
      margin-inline-start: 1rem;
      margin-top: 0px;
      padding-top: 0px;
      padding-bottom: 0px;
      padding-inline-end: 0px;
}
.menu-xs :where(li:not(.menu-title) > *:not(ul, details, .menu-title)), .menu-xs :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
      border-radius: 0.25rem;
      padding-left: 0.5rem;
      padding-right: 0.5rem;
      padding-top: 0.25rem;
      padding-bottom: 0.25rem;
      font-size: 0.75rem;
      line-height: 1rem;
}
.menu-xs .menu-title {
      padding-left: 0.5rem;
      padding-right: 0.5rem;
      padding-top: 0.25rem;
      padding-bottom: 0.25rem;
}
.menu-sm :where(li:not(.menu-title) > *:not(ul, details, .menu-title)), .menu-sm :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
      border-radius: var(--rounded-btn, 0.5rem);
      padding-left: 0.75rem;
      padding-right: 0.75rem;
      padding-top: 0.25rem;
      padding-bottom: 0.25rem;
      font-size: 0.875rem;
      line-height: 1.25rem;
}
.menu-sm .menu-title {
      padding-left: 0.75rem;
      padding-right: 0.75rem;
      padding-top: 0.5rem;
      padding-bottom: 0.5rem;
}
.menu-md :where(li:not(.menu-title) > *:not(ul, details, .menu-title)), .menu-md :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
      border-radius: var(--rounded-btn, 0.5rem);
      padding-left: 1rem;
      padding-right: 1rem;
      padding-top: 0.5rem;
      padding-bottom: 0.5rem;
      font-size: 0.875rem;
      line-height: 1.25rem;
}
.menu-md .menu-title {
      padding-left: 1rem;
      padding-right: 1rem;
      padding-top: 0.5rem;
      padding-bottom: 0.5rem;
}
.menu-lg :where(li:not(.menu-title) > *:not(ul, details, .menu-title)), .menu-lg :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
      border-radius: var(--rounded-btn, 0.5rem);
      padding-left: 1.5rem;
      padding-right: 1.5rem;
      padding-top: 0.75rem;
      padding-bottom: 0.75rem;
      font-size: 1.125rem;
      line-height: 1.75rem;
}
.menu-lg .menu-title {
      padding-left: 1.5rem;
      padding-right: 1.5rem;
      padding-top: 0.75rem;
      padding-bottom: 0.75rem;
}
.modal-top :where(.modal-box) {
    width: 100%;
    max-width: none;
    --tw-translate-y: -2.5rem;
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    border-bottom-right-radius: var(--rounded-box, 1rem);
    border-bottom-left-radius: var(--rounded-box, 1rem);
    border-top-left-radius: 0px;
    border-top-right-radius: 0px
}
.modal-middle :where(.modal-box) {
    width: 91.666667%;
    max-width: 32rem;
    --tw-translate-y: 0px;
    --tw-scale-x: .9;
    --tw-scale-y: .9;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    border-top-left-radius: var(--rounded-box, 1rem);
    border-top-right-radius: var(--rounded-box, 1rem);
    border-bottom-right-radius: var(--rounded-box, 1rem);
    border-bottom-left-radius: var(--rounded-box, 1rem)
}
.modal-bottom :where(.modal-box) {
    width: 100%;
    max-width: none;
    --tw-translate-y: 2.5rem;
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    border-top-left-radius: var(--rounded-box, 1rem);
    border-top-right-radius: var(--rounded-box, 1rem);
    border-bottom-right-radius: 0px;
    border-bottom-left-radius: 0px
}
.stats-horizontal > :not([hidden]) ~ :not([hidden]) {
    --tw-divide-x-reverse: 0;
    border-right-width: calc(1px * var(--tw-divide-x-reverse));
    border-left-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
    --tw-divide-y-reverse: 0;
    border-top-width: calc(0px * calc(1 - var(--tw-divide-y-reverse)));
    border-bottom-width: calc(0px * var(--tw-divide-y-reverse))
}
.stats-horizontal {
    overflow-x: auto
}
.stats-horizontal:where([dir="rtl"], [dir="rtl"] *) {
    --tw-divide-x-reverse: 1
}
.stats-vertical > :not([hidden]) ~ :not([hidden]) {
    --tw-divide-x-reverse: 0;
    border-right-width: calc(0px * var(--tw-divide-x-reverse));
    border-left-width: calc(0px * calc(1 - var(--tw-divide-x-reverse)));
    --tw-divide-y-reverse: 0;
    border-top-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
    border-bottom-width: calc(1px * var(--tw-divide-y-reverse))
}
.stats-vertical {
    overflow-y: auto
}
.steps-horizontal .step {
      grid-template-rows: 40px 1fr;
      grid-template-columns: auto;
      min-width: 4rem;
    }
      .steps-horizontal .step:before {
      height: 0.5rem;
      width: 100%;
      --tw-translate-x: 0px;
      --tw-translate-y: 0px;
      transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
      .steps-horizontal .step:where([dir="rtl"], [dir="rtl"] *):before {
      --tw-translate-x: 0px;
      transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
      .steps-horizontal .step:before {
        content: "";
        margin-inline-start: -100%;
      }
  .steps-vertical .step {
      gap: 0.5rem;
      grid-template-columns: 40px 1fr;
      grid-template-rows: auto;
      min-height: 4rem;
      justify-items: start;
    }
  .steps-vertical .step:before {
      height: 100%;
      width: 0.5rem;
      --tw-translate-x: -50%;
      --tw-translate-y: -50%;
      transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
  .steps-vertical .step:where([dir="rtl"], [dir="rtl"] *):before {
      --tw-translate-x: 50%;
      transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
  .steps-vertical .step:before {
        margin-inline-start: 50%;
      }
.table-xs :not(thead):not(tfoot) tr {
    font-size: 0.75rem;
    line-height: 1rem
}
.table-xs :where(th, td) {
    padding-left: 0.5rem;
    padding-right: 0.5rem;
    padding-top: 0.25rem;
    padding-bottom: 0.25rem
}
.table-sm :not(thead):not(tfoot) tr {
    font-size: 0.875rem;
    line-height: 1.25rem
}
.table-sm :where(th, td) {
    padding-left: 0.75rem;
    padding-right: 0.75rem;
    padding-top: 0.5rem;
    padding-bottom: 0.5rem
}
.table-md :not(thead):not(tfoot) tr {
    font-size: 0.875rem;
    line-height: 1.25rem
}
.table-md :where(th, td) {
    padding-left: 1rem;
    padding-right: 1rem;
    padding-top: 0.75rem;
    padding-bottom: 0.75rem
}
.table-lg :not(thead):not(tfoot) tr {
    font-size: 1rem;
    line-height: 1.5rem
}
.table-lg :where(th, td) {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
    padding-top: 1rem;
    padding-bottom: 1rem
}
.timeline-vertical > li > hr {

    width: 0.25rem
}

:where(.timeline-vertical:has(.timeline-middle) > li > hr):first-child {

    border-bottom-right-radius: var(--rounded-badge, 1.9rem);

    border-bottom-left-radius: var(--rounded-badge, 1.9rem);

    border-top-left-radius: 0px;

    border-top-right-radius: 0px
}

:where(.timeline-vertical:has(.timeline-middle) > li > hr):last-child {

    border-top-left-radius: var(--rounded-badge, 1.9rem);

    border-top-right-radius: var(--rounded-badge, 1.9rem);

    border-bottom-right-radius: 0px;

    border-bottom-left-radius: 0px
}

:where(.timeline-vertical:not(:has(.timeline-middle)) :first-child > hr:last-child) {

    border-top-left-radius: var(--rounded-badge, 1.9rem);

    border-top-right-radius: var(--rounded-badge, 1.9rem);

    border-bottom-right-radius: 0px;

    border-bottom-left-radius: 0px
}

:where(.timeline-vertical:not(:has(.timeline-middle)) :last-child > hr:first-child) {

    border-bottom-right-radius: var(--rounded-badge, 1.9rem);

    border-bottom-left-radius: var(--rounded-badge, 1.9rem);

    border-top-left-radius: 0px;

    border-top-right-radius: 0px
}

/* horizontal */

.timeline-horizontal > li > hr {

    height: 0.25rem
}

:where(.timeline-horizontal:has(.timeline-middle) > li > hr):first-child {

    border-start-end-radius: var(--rounded-badge, 1.9rem);

    border-end-end-radius: var(--rounded-badge, 1.9rem);

    border-start-start-radius: 0px;

    border-end-start-radius: 0px
}

:where(.timeline-horizontal:has(.timeline-middle) > li > hr):last-child {

    border-start-start-radius: var(--rounded-badge, 1.9rem);

    border-end-start-radius: var(--rounded-badge, 1.9rem);

    border-start-end-radius: 0px;

    border-end-end-radius: 0px
}

:where(.timeline-horizontal:not(:has(.timeline-middle)) :first-child > hr:last-child) {

    border-start-start-radius: var(--rounded-badge, 1.9rem);

    border-end-start-radius: var(--rounded-badge, 1.9rem);

    border-start-end-radius: 0px;

    border-end-end-radius: 0px
}

:where(.timeline-horizontal:not(:has(.timeline-middle)) :last-child > hr:first-child) {

    border-start-end-radius: var(--rounded-badge, 1.9rem);

    border-end-end-radius: var(--rounded-badge, 1.9rem);

    border-start-start-radius: 0px;

    border-end-start-radius: 0px
}
.tooltip {
  position: relative;
  display: inline-block;
  text-align: center;
  --tooltip-tail: 0.1875rem;
  --tooltip-color: var(--fallback-n,oklch(var(--n)/1));
  --tooltip-text-color: var(--fallback-nc,oklch(var(--nc)/1));
  --tooltip-tail-offset: calc(100% + 0.0625rem - var(--tooltip-tail));
}
.tooltip:before,
.tooltip:after {
  opacity: 0;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-delay: 100ms;
  transition-duration: 200ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}
.tooltip:after {
  position: absolute;
}
.tooltip:before {
  max-width: 20rem;
  white-space: normal;
  border-radius: 0.25rem;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
  background-color: var(--tooltip-color);
  color: var(--tooltip-text-color);
  width: max-content;
}
.tooltip.tooltip-open:before {
  opacity: 1;
  transition-delay: 75ms;
}
.tooltip.tooltip-open:after {
  opacity: 1;
  transition-delay: 75ms;
}
.tooltip:hover:before {
  opacity: 1;
  transition-delay: 75ms;
}
.tooltip:hover:after {
  opacity: 1;
  transition-delay: 75ms;
}
.tooltip:has(:focus-visible):after,
.tooltip:has(:focus-visible):before {
  opacity: 1;
  transition-delay: 75ms;
}
.tooltip:not([data-tip]):hover:before,
.tooltip:not([data-tip]):hover:after {
  visibility: hidden;
  opacity: 0;
}
.tooltip:after {
  content: "";
  border-style: solid;
  border-width: var(--tooltip-tail, 0);
  width: 0;
  height: 0;
  display: block;
  position: absolute;
}
.tooltip:after, .tooltip-top:after {
    transform: translateX(-50%);
    border-color: var(--tooltip-color) transparent transparent transparent;
    top: auto;
    left: 50%;
    right: auto;
    bottom: var(--tooltip-tail-offset);
  }
.tooltip-bottom:after {
    transform: translateX(-50%);
    border-color: transparent transparent var(--tooltip-color) transparent;
    top: var(--tooltip-tail-offset);
    left: 50%;
    right: auto;
    bottom: auto;
  }
.tooltip-left:after {
    transform: translateY(-50%);
    border-color: transparent transparent transparent var(--tooltip-color);
    top: 50%;
    left: auto;
    right: calc(var(--tooltip-tail-offset) + 0.0625rem);
    bottom: auto;
  }
.tooltip-right:after {
    transform: translateY(-50%);
    border-color: transparent var(--tooltip-color) transparent transparent;
    top: 50%;
    left: calc(var(--tooltip-tail-offset) + 0.0625rem);
    right: auto;
    bottom: auto;
  }
.tooltip-primary {
    --tooltip-color: var(--fallback-p,oklch(var(--p)/1));
    --tooltip-text-color: var(--fallback-pc,oklch(var(--pc)/1));
  }
.tooltip-secondary {
    --tooltip-color: var(--fallback-s,oklch(var(--s)/1));
    --tooltip-text-color: var(--fallback-sc,oklch(var(--sc)/1));
  }
.tooltip-accent {
    --tooltip-color: var(--fallback-a,oklch(var(--a)/1));
    --tooltip-text-color: var(--fallback-ac,oklch(var(--ac)/1));
  }
.tooltip-info {
    --tooltip-color: var(--fallback-in,oklch(var(--in)/1));
    --tooltip-text-color: var(--fallback-inc,oklch(var(--inc)/1));
  }
.tooltip-success {
    --tooltip-color: var(--fallback-su,oklch(var(--su)/1));
    --tooltip-text-color: var(--fallback-suc,oklch(var(--suc)/1));
  }
.tooltip-warning {
    --tooltip-color: var(--fallback-wa,oklch(var(--wa)/1));
    --tooltip-text-color: var(--fallback-wac,oklch(var(--wac)/1));
  }
.tooltip-error {
    --tooltip-color: var(--fallback-er,oklch(var(--er)/1));
    --tooltip-text-color: var(--fallback-erc,oklch(var(--erc)/1));
  }
